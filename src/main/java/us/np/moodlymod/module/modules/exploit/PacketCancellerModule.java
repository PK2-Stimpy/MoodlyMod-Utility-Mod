package us.np.moodlymod.module.modules.exploit;

import me.zero.alpine.fork.listener.EventHandler;
import me.zero.alpine.fork.listener.Listener;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import us.np.moodlymod.event.custom.networkmanager.NetworkPacketEvent;
import us.np.moodlymod.module.Module;
import us.np.moodlymod.module.ModuleType;
import us.np.moodlymod.module.option.OptionBoolean;

import java.awt.*;

public class PacketCancellerModule extends Module {
    public static final OptionBoolean packetInput = new OptionBoolean("CPacketInput", false);
    public static final OptionBoolean packetPlayer = new OptionBoolean("CPacketPlayer", true);
    public static final OptionBoolean packetEntityAction = new OptionBoolean("CPacketEntityAction", false);
    public static final OptionBoolean packetUseEntity = new OptionBoolean("CPacketUseEntity", false);
    public static final OptionBoolean packetVehicleMove = new OptionBoolean("CPacketVehicleMove", false);
    public static final OptionBoolean packetSteerBoat = new OptionBoolean("CPacketSteerBoat", false);

    public PacketCancellerModule() {
        super("PacketCanceller", null, "NONE", Color.RED, ModuleType.EXPLOIT);
        addOption(packetInput);
        addOption(packetPlayer);
        addOption(packetEntityAction);
        addOption(packetUseEntity);
        addOption(packetVehicleMove);
        addOption(packetSteerBoat);
        endOption();
    }

    @EventHandler
    private Listener<NetworkPacketEvent> packetEventListener = new Listener<>(event -> {
        Packet packet = event.getPacket();
        if((packet instanceof CPacketInput) && packetInput.getValue())
            event.cancel();
        if((packet instanceof CPacketPlayer) && packetPlayer.getValue())
            event.cancel();
        if((packet instanceof CPacketEntityAction) && packetEntityAction.getValue())
            event.cancel();
        if((packet instanceof CPacketUseEntity) && packetUseEntity.getValue())
            event.cancel();
        if((packet instanceof CPacketVehicleMove) && packetVehicleMove.getValue())
            event.cancel();
        if((packet instanceof CPacketSteerBoat) && packetSteerBoat.getValue())
            event.cancel();
    });
}